{"mappings":"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","sources":["node_modules/notiflix/build/notiflix-confirm-aio.js"],"sourcesContent":["/*\n* Notiflix Confirm AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // CONFIRM: Default Settings: begin\n  var typesConfirm = {\r\n    Show: 'Show',\r\n    Ask: 'Ask',\r\n    Prompt: 'Prompt',\r\n  };\r\n  var newConfirmSettings;\r\n  var confirmSettings = {\r\n    ID: 'NotiflixConfirmWrap', // can not customizable\r\n    className: 'notiflix-confirm',\r\n    width: '300px',\r\n    zindex: 4003,\r\n    position: 'center', // 'center' - 'center-top' - 'center-bottom' - 'right-top' - 'right-center' - 'right-bottom' - 'left-top' - 'left-center' - 'left-bottom'\r\n    distance: '10px',\r\n    backgroundColor: '#f8f8f8',\r\n    borderRadius: '25px',\r\n    backOverlay: true,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    rtl: false,\r\n    fontFamily: 'Quicksand',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 300,\r\n    cssAnimationStyle: 'fade', // 'zoom' - 'fade'\r\n    plainText: true,\r\n\n    titleColor: '#32c682',\r\n    titleFontSize: '16px',\r\n    titleMaxLength: 34,\r\n\n    messageColor: '#1e1e1e',\r\n    messageFontSize: '14px',\r\n    messageMaxLength: 110,\r\n\n    buttonsFontSize: '15px',\r\n    buttonsMaxLength: 34,\r\n    okButtonColor: '#f8f8f8',\r\n    okButtonBackground: '#32c682',\r\n    cancelButtonColor: '#f8f8f8',\r\n    cancelButtonBackground: '#a9a9a9',\r\n  };\n  // CONFIRM: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // CONFIRM: Get Internal CSS Codes: begin\n  var confirmGetInternalCSSCodes = function () {\r\n    var confirmCSS = '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\"-overlay\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\"-content\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\"-content\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';\r\n    return confirmCSS || null;\r\n  };\n  // CONFIRM: Get Internal CSS Codes: end\n\n  // CONFIRM: Create: begin\n  var confirmCreate = function (confirmType, title, messageOrQuestion, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newConfirmSettings) {\r\n      Notiflix.Confirm.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {});\r\n\n    // check the \"options\": begin\r\n    if (typeof options === 'object' && !Array.isArray(options)) {\r\n      // extend new settings with the new options\r\n      newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\r\n    }\r\n    // check the \"options\": end\r\n\n    // check the arguments: begin\r\n    if (typeof title !== 'string') { title = 'Notiflix Confirm'; }\r\n    if (typeof messageOrQuestion !== 'string') { messageOrQuestion = 'Do you agree with me?'; }\r\n    if (typeof okButtonText !== 'string') { okButtonText = 'Yes'; }\r\n    if (typeof cancelButtonText !== 'string') { cancelButtonText = 'No'; }\r\n    if (typeof okButtonCallback !== 'function') { okButtonCallback = undefined; }\r\n    if (typeof cancelButtonCallback !== 'function') { cancelButtonCallback = undefined; }\r\n    // check the arguments: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newConfirmSettings.plainText) {\r\n      title = commonGetPlaintext(title);\r\n      messageOrQuestion = commonGetPlaintext(messageOrQuestion);\r\n      okButtonText = commonGetPlaintext(okButtonText);\r\n      cancelButtonText = commonGetPlaintext(cancelButtonText);\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\r\n    if (!newConfirmSettings.plainText) {\r\n      if (title.length > newConfirmSettings.titleMaxLength) {\r\n        title = 'Possible HTML Tags Error';\r\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\r\n        okButtonText = 'Okay';\r\n        cancelButtonText = '...';\r\n      }\r\n      if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\r\n        title = 'Possible HTML Tags Error';\r\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\r\n        okButtonText = 'Okay';\r\n        cancelButtonText = '...';\r\n      }\r\n      if ((okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength) {\r\n        title = 'Possible HTML Tags Error';\r\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\r\n        okButtonText = 'Okay';\r\n        cancelButtonText = '...';\r\n      }\r\n    }\r\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\r\n\n    // max length: begin\r\n    if (title.length > newConfirmSettings.titleMaxLength) {\r\n      title = title.substring(0, newConfirmSettings.titleMaxLength) + '...';\r\n    }\r\n    if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\r\n      messageOrQuestion = messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + '...';\r\n    }\r\n    if (okButtonText.length > newConfirmSettings.buttonsMaxLength) {\r\n      okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\r\n    }\r\n    if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) {\r\n      cancelButtonText = cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\r\n    }\r\n    // max length: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newConfirmSettings.cssAnimation) {\r\n      newConfirmSettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // confirm wrap: begin\r\n    var ntflxConfirmWrap = window.document.createElement('div');\r\n    ntflxConfirmWrap.id = confirmSettings.ID;\r\n    ntflxConfirmWrap.className = newConfirmSettings.className + (newConfirmSettings.cssAnimation ? ' nx-with-animation nx-' + newConfirmSettings.cssAnimationStyle : '');\r\n    ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\r\n    ntflxConfirmWrap.style.padding = newConfirmSettings.distance;\r\n\n    // rtl: begin\r\n    if (newConfirmSettings.rtl) {\r\n      ntflxConfirmWrap.setAttribute('dir', 'rtl');\r\n      ntflxConfirmWrap.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // position: begin\r\n    var confirmPosition = typeof newConfirmSettings.position === 'string' ? newConfirmSettings.position.trim() : 'center';\r\n    ntflxConfirmWrap.classList.add('nx-position-' + confirmPosition);\r\n    // position: end\r\n\n    // font-family\r\n    ntflxConfirmWrap.style.fontFamily = '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily;\r\n\n    // if background overlay is true: begin\r\n    var confirmOverlay = '';\r\n    if (newConfirmSettings.backOverlay) {\r\n      confirmOverlay = '<div class=\"' + newConfirmSettings.className + '-overlay' + (newConfirmSettings.cssAnimation ? ' nx-with-animation' : '') + '\" style=\"background:' + newConfirmSettings.backOverlayColor + ';animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms;\"></div>';\r\n    }\r\n    // if background overlay is true: end\r\n\n    // if have a callback => add cancel button: begin\r\n    var cancelButtonHTML = '';\r\n    if (typeof okButtonCallback === 'function') {\r\n      cancelButtonHTML = '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' + newConfirmSettings.cancelButtonColor + ';background:' + newConfirmSettings.cancelButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + cancelButtonText + '</a>';\r\n    }\r\n    // if have a callback => add cancel button: end\r\n\n    // check the validation module: begin\r\n    var setValidationInput = '';\r\n    var theExpectedAnswer = null;\r\n    var theClientAnswer = undefined;\r\n    if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\r\n      theExpectedAnswer = answer || '';\r\n      var inputMaxLength = (confirmType === typesConfirm.Ask) ? Math.ceil(theExpectedAnswer.length * 1.5) : (theExpectedAnswer.length > 200 ? Math.ceil(theExpectedAnswer.length * 1.5) : 250);\r\n      var inputDefaultValueAttr = confirmType === typesConfirm.Prompt ? ('value=\"' + theExpectedAnswer + '\"') : '';\r\n      setValidationInput = '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' + inputDefaultValueAttr + ' maxlength=\"' + inputMaxLength + '\" style=\"font-size:' + newConfirmSettings.messageFontSize + ';border-radius: ' + newConfirmSettings.borderRadius + ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\r\n    }\r\n    // check the validation module: end\r\n\n    // confirm wrap content: begin\r\n    ntflxConfirmWrap.innerHTML = confirmOverlay +\r\n      '<div class=\"' + newConfirmSettings.className + '-content\" style=\"width:' + newConfirmSettings.width + '; background:' + newConfirmSettings.backgroundColor + '; animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms; border-radius: ' + newConfirmSettings.borderRadius + ';\">' +\r\n      '<div class=\"' + newConfirmSettings.className + '-head\">' +\r\n      '<h5 style=\"color:' + newConfirmSettings.titleColor + ';font-size:' + newConfirmSettings.titleFontSize + ';\">' + title + '</h5>' +\r\n      '<div style=\"color:' + newConfirmSettings.messageColor + ';font-size:' + newConfirmSettings.messageFontSize + ';\">' + messageOrQuestion + setValidationInput + '</div>' +\r\n      '</div>' +\r\n      '<div class=\"' + newConfirmSettings.className + '-buttons\">' +\r\n      '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' + (typeof okButtonCallback === 'function' ? '' : ' nx-full') + '\" style=\"color:' + newConfirmSettings.okButtonColor + ';background:' + newConfirmSettings.okButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + okButtonText + '</a>' +\r\n      cancelButtonHTML +\r\n      '</div>' +\r\n      '</div>';\r\n    // confirm wrap content: end\r\n    // confirm wrap: end\r\n\n    // if there is no confirm box: begin\r\n    if (!window.document.getElementById(ntflxConfirmWrap.id)) {\r\n      window.document.body.appendChild(ntflxConfirmWrap);\r\n\n      // buttons && input listener: begin\r\n      var confirmCloseWrap = window.document.getElementById(ntflxConfirmWrap.id);\r\n      var okButton = window.document.getElementById('NXConfirmButtonOk');\r\n\n      // validation input listener: begin\r\n      var validationInput = window.document.getElementById('NXConfirmValidationInput');\r\n      if (validationInput) {\r\n        validationInput.focus();\r\n        validationInput.setSelectionRange(0, (validationInput.value || '').length);\r\n        validationInput.addEventListener('keyup', function (event) {\r\n          var thisValue = event.target.value;\r\n          if (\r\n            (confirmType === typesConfirm.Ask) &&\r\n            (thisValue !== theExpectedAnswer)\r\n          ) {\r\n            event.preventDefault();\r\n            validationInput.classList.add('nx-validation-failure');\r\n            validationInput.classList.remove('nx-validation-success');\r\n          } else {\r\n            if (confirmType === typesConfirm.Ask) {\r\n              validationInput.classList.remove('nx-validation-failure');\r\n              validationInput.classList.add('nx-validation-success');\r\n            }\r\n            var isEnter = (event.key || '').toLocaleLowerCase('en') === 'enter' || event.keyCode === 13;\r\n            if (isEnter) {\r\n              okButton.dispatchEvent(new Event('click'));\r\n            }\r\n          }\r\n        });\r\n      }\r\n      // validation input listener: end\r\n\n      // ok button listener: begin\r\n      okButton.addEventListener('click', function (event) {\r\n        // check the answer if the type is \"Ask\": begin\r\n        if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\r\n          var inputValue = (validationInput.value || '').toString();\r\n          if (inputValue !== theExpectedAnswer) {\r\n            validationInput.focus();\r\n            validationInput.classList.add('nx-validation-failure');\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            event.returnValue = false;\r\n            event.cancelBubble = true;\r\n            return false;\r\n          } else {\r\n            validationInput.classList.remove('nx-validation-failure');\r\n          }\r\n        }\r\n        // check the answer if the type is \"Ask\": end\r\n\n        // if ok callback && if ok callback is a function\r\n        if (typeof okButtonCallback === 'function') {\r\n          if (confirmType === typesConfirm.Prompt && validationInput) {\r\n            theClientAnswer = validationInput.value || '';\r\n          }\r\n          okButtonCallback(theClientAnswer);\r\n        }\r\n        confirmCloseWrap.classList.add('nx-remove');\r\n\n        var timeout = setTimeout(function () {\r\n          if (confirmCloseWrap.parentNode !== null) {\r\n            confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\r\n            clearTimeout(timeout);\r\n          }\r\n        }, newConfirmSettings.cssAnimationDuration);\r\n      });\r\n      // ok button listener: end\r\n\n      // if ok callback && if ok callback a function => add Cancel Button listener: begin\r\n      if (typeof okButtonCallback === 'function') {\r\n        // cancel button listener: begin\r\n        var cancelButton = window.document.getElementById('NXConfirmButtonCancel');\r\n        cancelButton.addEventListener('click', function () {\r\n          // if cancel callback && if cancel callback a function\r\n          if (typeof cancelButtonCallback === 'function') {\r\n            if (confirmType === typesConfirm.Prompt && validationInput) {\r\n              theClientAnswer = validationInput.value || '';\r\n            }\r\n            cancelButtonCallback(theClientAnswer);\r\n          }\r\n          confirmCloseWrap.classList.add('nx-remove');\r\n\n          var timeout = setTimeout(function () {\r\n            if (confirmCloseWrap.parentNode !== null) {\r\n              confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\r\n              clearTimeout(timeout);\r\n            }\r\n          }, newConfirmSettings.cssAnimationDuration);\r\n        });\r\n        // cancel button listener: end\r\n      }\r\n      // if ok callback && if ok callback a function => add Cancel Button listener: end\r\n      // buttons && input listener: end\r\n    }\r\n    // if there is no confirm box: end\r\n\n    // extend new settings with the backup settings\r\n    newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\r\n  };\n  // CONFIRM: Create: end\n\n  var Notiflix = {\n    Confirm: {\r\n      // Init\r\n      init: function (userConfirmOptions) {\r\n        // extend options\r\n        newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(confirmGetInternalCSSCodes, 'NotiflixConfirmInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userConfirmExtendOptions) {\r\n        // if initialized already\r\n        if (newConfirmSettings) {\r\n          newConfirmSettings = commonExtendOptions(true, newConfirmSettings, userConfirmExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Confirm module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Show\r\n      show: function (title, message, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n        confirmCreate(typesConfirm.Show, title, message, null, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\r\n      },\r\n      // Ask\r\n      ask: function (title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n        confirmCreate(typesConfirm.Ask, title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\r\n      },\r\n      // Prompt\r\n      prompt: function (title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\r\n        confirmCreate(typesConfirm.Prompt, title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Confirm: Notiflix.Confirm });\n  } else {\n    return { Confirm: Notiflix.Confirm };\n  }\n\n});"],"names":["root","factory","$parcel$global","window","$2931c567af9f85b7$exports","document","newConfirmSettings","typesConfirm","confirmSettings","ID","className","width","zindex","position","distance","backgroundColor","borderRadius","backOverlay","backOverlayColor","rtl","fontFamily","cssAnimation","cssAnimationDuration","cssAnimationStyle","plainText","titleColor","titleFontSize","titleMaxLength","messageColor","messageFontSize","messageMaxLength","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonExtendOptions","extended","deep","i","Object","prototype","toString","call","arguments","merge","obj","prop","hasOwnProperty","length","commonGetPlaintext","html","htmlPool","createElement","innerHTML","textContent","innerText","confirmGetInternalCSSCodes","confirmCreate","confirmType","title","messageOrQuestion","answer","okButtonText","cancelButtonText","okButtonCallback","cancelButtonCallback","options","Notiflix","Confirm","init","newConfirmSettingsBackup","Array","isArray","undefined","substring","ntflxConfirmWrap","id","style","zIndex","padding","setAttribute","classList","add","confirmPosition","trim","confirmOverlay","cancelButtonHTML","setValidationInput","theExpectedAnswer","theClientAnswer","inputMaxLength","Math","ceil","getElementById","body","appendChild","confirmCloseWrap","okButton","validationInput","focus","setSelectionRange","value","addEventListener","event","thisValue","target","preventDefault","remove","key","toLocaleLowerCase","keyCode","dispatchEvent","Event","stopPropagation","returnValue","cancelBubble","timeout","setTimeout","parentNode","removeChild","clearTimeout","userConfirmOptions","getInternalCSSCodes","styleElementId","internalCSS","head","commonSetInternalCSSCodes","userConfirmExtendOptions","show","ask","question","prompt","defaultAnswer","define","amd"],"version":3,"file":"03-promises.cfd3b95d.js.map"}