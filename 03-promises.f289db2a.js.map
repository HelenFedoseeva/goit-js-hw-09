{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAER,E,MAAUC,GAE9BI,EACFF,EAAQK,GAERJ,EAAOI,EAAc,G,CAbXC,SAASC,cAAc,SAG/BC,iBAAiB,UAezB,SAAyBC,GACvBA,EAAEC,iBACFC,QAAQC,IAAI,KACZ,IAAIC,EAAQJ,EAAEK,OAAOhB,MAAMiB,MACvBC,EAASP,EAAEK,OAAOE,OAAOD,MACzBE,EAAOR,EAAEK,OAAOG,KAAKF,MAEzB,IAAK,IAAIG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDtB,EAAc,EAAG,MACduB,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,YAAW,KACTC,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,GAEjDA,EAAM,IAEV0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBsB,YAAW,KACTC,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,GAE9CA,EAAM,IAEbe,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n// console.log(formRef);\n\nformRef.addEventListener('submit', onSubmitHandler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const objectPromise = { position, delay };\n\n    if (shouldResolve) {\n      resolve(objectPromise);\n    } else {\n      reject(objectPromise);\n    }\n  });\n}\n\nfunction onSubmitHandler(e) {\n  e.preventDefault();\n  console.log(123);\n  let delay = e.target.delay.value;\n  let amount = e.target.amount.value;\n  let step = e.target.step.value;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(2, 1500)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        }, delay);\n      });\n    delay += step;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","objectPromise","document","querySelector","addEventListener","e","preventDefault","console","log","delay1","target","value","amount","step","position1","then","setTimeout","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f289db2a.js.map"}