{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASC,cAAc,wBACnCE,EAAWH,SAASC,cAAc,uBAClCG,EAAUJ,SAASC,cAAc,sBAIvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAER,WAAUC,SAElCQ,YAAW,WACLJ,EACFF,EAAQK,GAERJ,EAAOI,E,GAERP,E,IAbPR,EAAQiB,iBAAiB,UAiBzB,SAAyBC,GACvBA,EAAEC,iBAKF,IAJA,IAAIC,EAAQC,OAAOjB,EAASkB,OACxBC,EAASF,OAAOlB,EAAUmB,OAC1BE,EAAOH,OAAOhB,EAAQiB,OAEjBG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDnB,EAAcmB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDY,GAASI,EAGXN,EAAEgB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\n\nformRef.addEventListener('submit', onSubmitHandler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const objectPromise = { position, delay };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(objectPromise);\n      } else {\n        reject(objectPromise);\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitHandler(e) {\n  e.preventDefault();\n  let delay = Number(delayRef.value);\n  let amount = Number(amountRef.value);\n  let step = Number(stepRef.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n\n  e.target.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","objectPromise","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","amount","step","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","target","reset"],"version":3,"file":"03-promises.dd1efe1e.js.map"}