{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASC,cAAc,wBACnCE,EAAWH,SAASC,cAAc,uBAClCG,EAAUJ,SAASC,cAAc,sBAIvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAER,E,MAAUC,GAElCQ,YAAW,KACLJ,EACFF,EAAQK,GAERJ,EAAOI,EAAc,GAEtBP,EAAM,G,CAbbR,EAAQiB,iBAAiB,UAiBzB,SAAyBC,GACvBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOjB,EAASkB,OACxBC,EAASF,OAAOlB,EAAUmB,OAC1BE,EAAOH,OAAOhB,EAAQiB,OAE1B,IAAK,IAAIG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDnB,EAAcmB,EAAUL,GACrBM,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,IAGnDY,GAASI,EAGXN,EAAEc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\n\nformRef.addEventListener('submit', onSubmitHandler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const objectPromise = { position, delay };\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(objectPromise);\n      } else {\n        reject(objectPromise);\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitHandler(e) {\n  e.preventDefault();\n  let delay = Number(delayRef.value);\n  let amount = Number(amountRef.value);\n  let step = Number(stepRef.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n\n  e.target.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","objectPromise","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","amount","step","position1","then","$parcel$interopDefault","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.6d8b122c.js.map"}